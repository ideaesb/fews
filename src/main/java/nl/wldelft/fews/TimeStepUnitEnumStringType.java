//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.08 at 03:36:14 PM MST 
//


package nl.wldelft.fews;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for timeStepUnitEnumStringType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="timeStepUnitEnumStringType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="second"/&gt;
 *     &lt;enumeration value="minute"/&gt;
 *     &lt;enumeration value="hour"/&gt;
 *     &lt;enumeration value="day"/&gt;
 *     &lt;enumeration value="week"/&gt;
 *     &lt;enumeration value="month"/&gt;
 *     &lt;enumeration value="year"/&gt;
 *     &lt;enumeration value="nonequidistant"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "timeStepUnitEnumStringType")
@XmlEnum
public enum TimeStepUnitEnumStringType {

    @XmlEnumValue("second")
    SECOND("second"),
    @XmlEnumValue("minute")
    MINUTE("minute"),
    @XmlEnumValue("hour")
    HOUR("hour"),
    @XmlEnumValue("day")
    DAY("day"),
    @XmlEnumValue("week")
    WEEK("week"),
    @XmlEnumValue("month")
    MONTH("month"),
    @XmlEnumValue("year")
    YEAR("year"),
    @XmlEnumValue("nonequidistant")
    NONEQUIDISTANT("nonequidistant");
    private final String value;

    TimeStepUnitEnumStringType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TimeStepUnitEnumStringType fromValue(String v) {
        for (TimeStepUnitEnumStringType c: TimeStepUnitEnumStringType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
